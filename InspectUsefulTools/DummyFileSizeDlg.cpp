/*! @file  DummyFileSizeDlg.cpp
    @brief ダミーファイル作成実行画面クラス
*/
#include "stdafx.h"
#include "InspectUsefulTools.h"
#include "DummyFileSizeDlg.h"

#include <math.h>

IMPLEMENT_DYNAMIC(CDummyFileSizeDlg, CDialog)

/*!
 @brief コンストラクタ

 @param [in]    pParent     親ウィンドウインスタンス
*/
CDummyFileSizeDlg::CDummyFileSizeDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CDummyFileSizeDlg::IDD, pParent)
	, m_strFilePath(_T(""))
	, m_strFileSize(_T(""))
	, m_nDataUnit(0)
{

}

/*!
 @brief ダイアログ データの交換と有効性チェックのためにフレームワークが呼び出します。

 @param [in]    pDX     CDataExchange オブジェクトへのポインタ
*/
void CDummyFileSizeDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_DUMMY_FILE_PATH_EDIT, m_strFilePath);
	DDX_Text(pDX, IDC_DUMMY_FILE_SIZE_EDIT, m_strFileSize);
	DDX_CBIndex(pDX, IDC_DUMMY_FILE_SIZE_UNIT_COMBO, m_nDataUnit);
}

/*!
 @brief メッセージマップ定義
*/
BEGIN_MESSAGE_MAP(CDummyFileSizeDlg, CDialog)
	ON_BN_CLICKED(IDC_DUMMY_FILE_EXEC_BUTTON, &CDummyFileSizeDlg::OnBnClickedDummyFileExecButton)
	ON_BN_CLICKED(IDC_FILE_ATTRIBUTE_PATH_SELECT_BUTTON, &CDummyFileSizeDlg::OnBnClickedFileAttributePathSelectButton)
	ON_WM_DROPFILES()
	ON_EN_CHANGE(IDC_DUMMY_FILE_PATH_EDIT, &CDummyFileSizeDlg::OnEnChangeDummyFilePathEdit)
END_MESSAGE_MAP()

/*!
 @brief このメソッドは WM_INITDIALOG のメッセージに応答して呼び出されます。
*/
BOOL CDummyFileSizeDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// D&D設定
	::SHAutoComplete(::GetDlgItem(this->m_hWnd, IDC_DUMMY_FILE_PATH_EDIT), SHACF_FILESYSTEM);
	DragAcceptFiles();

	// 単位設定
	CComboBox *pCombo = (CComboBox *) this->GetDlgItem(IDC_DUMMY_FILE_SIZE_UNIT_COMBO);
	pCombo->AddString(_T("Byte"));
	pCombo->AddString(_T("KB"));
	pCombo->AddString(_T("MB"));
	pCombo->AddString(_T("GB"));

	pCombo->SetCurSel(0);

	m_strFileSize = _T("0");
	UpdateData(FALSE);

	return TRUE;
}

/*!
 @brief Windows 関数 TranslateMessage や DispatchMessage にディスパッチされる前に、ウィンドウ メッセージをフィルタ処理するには、この関数をオーバーライドします。\n
 既定の実装では、アクセラレータ キーの変換を行います。\n
 そのため、オーバーライドした CWinApp::PreTranslateMessage メンバ関数を呼び出す必要があります。
*/
BOOL CDummyFileSizeDlg::PreTranslateMessage(MSG* pMsg)
{
    if (pMsg->message == WM_KEYDOWN && pMsg->wParam == VK_RETURN) {
        return 0;
        //  必ず０で戻ること!!
        //  0以外で戻ると各コントロールへ次の処理が回らなくなる
    }
    return CDialog::PreTranslateMessage(pMsg);
}

/*!
 @brief 実行ボタンをクリックすると呼び出されます。
*/
void CDummyFileSizeDlg::OnBnClickedDummyFileExecButton()
{
	UpdateData(TRUE);

	TCHAR* pErr;
	long long nReqSize = _tcstol(m_strFileSize, &pErr, 10);
	if (*pErr != NULL) {
		return;
	}

	// 単位分計算
	nReqSize *= (long long) max(pow(1024.0, (double) m_nDataUnit), 1);

	// 4KB
	char szWriteData[] = "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456";
	long long nDataSize = sizeof(szWriteData) - 1;
	try {
		CFile inFile(m_strFilePath, CFile::modeWrite | CFile::modeCreate);

		long long nWriteSize = nDataSize;
		BOOL bExit = FALSE;
		while (0 < nReqSize && bExit == FALSE) {
			nReqSize -= nDataSize;
			if (nReqSize < 0) {
				nReqSize += nDataSize;
				nWriteSize = nReqSize;
				bExit = TRUE;
			}

			inFile.Write(szWriteData, (UINT) nWriteSize);
		}
	}
	catch(CException *pE)
	{
		TCHAR* pszErrorMsg = new TCHAR[1024];
		pE->GetErrorMessage(pszErrorMsg, 1024);
		CString strErrorMessage(pszErrorMsg);

		AfxMessageBox(strErrorMessage, MB_TASKMODAL);
		pE->Delete();
	}

	UpdateData(FALSE);

	// 処理完了ダイアログを表示
	AfxMessageBox(IDS_IU_OPERATION_COMPLETE);
}


/*!
 @brief ファイル選択ボタンをクリックすると呼び出されます。
*/
void CDummyFileSizeDlg::OnBnClickedFileAttributePathSelectButton()
{
	// すべてのファイルを対象
	CFileDialog fileDlg(FALSE, NULL, NULL, OFN_HIDEREADONLY , CString((LPCTSTR) IDS_IU_FILETYPE_DESCRIPT));
	if (fileDlg.DoModal() == IDOK) {
		m_strFilePath = fileDlg.GetPathName();

		((CDialog *) this->GetDlgItem(IDC_DUMMY_FILE_EXEC_BUTTON))->EnableWindow(TRUE);

		UpdateData(FALSE);
	}
}

/*!
 @brief D&Dすると呼び出されます。

 @param [in]    hDropInfo     D&D情報
*/
void CDummyFileSizeDlg::OnDropFiles(HDROP hDropInfo)
{
	UINT nDragFileCount = DragQueryFile(hDropInfo,  (UINT)-1, NULL, (UINT)0);

	// 複数のファイルがD&Dされたら中断
	if(nDragFileCount != 1) {
		return;
	}
	
	// ドラッグしたファイル名を取得し読み込みを行う
	TCHAR lpszFilePath[MAX_PATH];
	DragQueryFile(hDropInfo, 0, lpszFilePath, MAX_PATH);

	m_strFilePath = lpszFilePath;
	((CDialog *) this->GetDlgItem(IDC_DUMMY_FILE_EXEC_BUTTON))->EnableWindow(TRUE);
	UpdateData(FALSE);

	DragFinish(hDropInfo);
}

/*!
 @brief ファイルパスを変更すると呼び出されます。
*/
void CDummyFileSizeDlg::OnEnChangeDummyFilePathEdit()
{
	UpdateData(TRUE);
	((CDialog *) this->GetDlgItem(IDC_DUMMY_FILE_EXEC_BUTTON))->EnableWindow(m_strFilePath.IsEmpty() == false);
}
